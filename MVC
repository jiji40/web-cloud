  MVC Pattern
Modelul Model-View-Controller separă o aplicație în trei principale componente: modelul, vizualizarea și controlerul. 
Controlerul interacționează cu modelul bazat pe cerințele cererii. Ea face potrivit vizualizați și îi furnizează datele necesare pentru afișare.

  MCV Component
Modelul care conține sau reprezintă datele cu care lucrează utilizatorii.
Vizualizările definesc modul în care va fi afișată interfața de utilizare a aplicației.
Controlorii procesează cererile primite, efectuează operațiuni pe model și selectează vizualizări pentru a le reda utilizatorului.


  Difference between Authentication and Authorization?
Authentification - is the right user? valideaza daca userul este cel bun
Autorization - verifica ce atribute(roluri) are userul. Ce are acces sa faca
 
  The identity services should be added to the application in the ConfigureServices method in the Startup class
services.AddIdentity<IdentityUser, IdentityRole>()
  .AddEntityFrameworkStores<ApplicationDbContext>();
  
  Password policy:
§ User's lockout:
    Configure Identity
      options.Password.RequireDigit = true;
      options.Password.RequiredLength = 8;
      options.Password.RequireNonAlphanumeric = false;
      options.Password.RequireUppercase = true;
      options.Password.RequireLowercase = false;
// Lockout settings
      options.Lockout.DefaultLockoutTimeSpan =
      TimeSpan.FromMinutes(30);
      options.Lockout.MaxFailedAccessAttempts = 10;
      options.Lockout.AllowedForNewUsers = true;
